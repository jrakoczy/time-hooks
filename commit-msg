#!/bin/sh
. ./auxiliary.sh


# Check if the script should be executed
settings_turn="$(git config --get toggl.turn)"
[ "$settings_turn" = "off" ] && exit 0
[ "$settings_turn" != "on" ] && { printf "Git toggl settings cannot be determined."; exit 1; }


# Define regexps
hours_regex="[0-9]+"
minutes_regex="[0-6][0-9]|[1-9]" # Both double- and single-digit values are valid
time_regex="^([[:space:]]*$hours_regex[[:space:]]*h)?[[:space:]]*($minutes_regex)[[:space:]]*min[[:space:]]*$"

committers_regex="^([[:space:]]*[[:alnum:]]*[[:space:]]*)+$"


# Get user input 
get_time(){
    printf "\nEnter time spent separating time units with h (hours) and min (minutes)."
    printf "\nWhitespaces are omitted."
    printf "\nEg:  1 h 30 min"
    printf "\nTime spent: " 
    read time_spent

    [[  "$time_spent" =~ $time_regex ]] || return 1
    time_spent="$(printf "%s" "$time_spent" | sed -e 's/\s\{2,\}/ /g')"
}

get_committers() {
    printf "\nEnter (a) handle(s) of committer(s) working on the commit."
    printf "\nIn case there were more than one committer separate handles with whitespaces."
    printf "\nEg: jondoe marthastew" 
    printf "\nCommitters: "
    read committers

    [[ "$committers" =~ $committers_regex ]] || return 1
    committers="$(printf "%s" "$committers" | sed -e 's/\s\{2,\}/ /g')"
}


# Main loop
# Get time, get committers, validate submitted data.
while :
do     
    while : 
    do
        get_time && break || printf "\n[ERROR] Invalid time format.\nPlease re-enter the data.\n"
    done

    while :
    do 
        get_committers && break || printf "\n[ERROR] Invalid handle(s) format. Please re-enter the data.\n"
    done

    time_message=$(printf "\nTime spent: ${time_spent}")
    committers_message=$(printf "\nCommitters: ${committers}")
    reenter_message=$(printf "\nDo you want to proceed? (Y/n):")
    yesno_message="${time_message}${committers_message}${reenter_message}"
    
    if  yesno "$yesno_message"
    then
        printf "${time_message}${committers_message}" >> $1 ||\   # Append to a commit message
        printf "\n[ERROR] Couldn't append to the commit message."
       
         break
    fi
done       
